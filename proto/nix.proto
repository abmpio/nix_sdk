syntax = "proto3";

option go_package="./nix";

package proto;

service Nix {
	rpc HealthCheck(NixHealthCheckRequest) returns (NixHealthCheckResponse);

	rpc FindOneKVByKey(FindKVOneByKeyRequest) returns (FindKVOneByKeyResponse);
	rpc FindKVListByKeyList(FindKVListByKeyListRequest) returns (FindKVListByKeyListResponse);
}


message NixHealthCheckRequest {
	string service = 1;
}

message NixHealthCheckResponse {
	enum ServiceStatus{
		UNKNOWN = 0;
		SERVING = 1;
		NOT_SERVING = 2;
		SERVICE_UNKNOWN = 3;
	}
	ServiceStatus status = 1;
}


// 定义 KVItemValue 结构
message KVItemValue {
    string type = 1; // 使用枚举类型
    bytes value = 2;       // 使用字符串类型，可以根据实际情况扩展
}

// 请求消息类型
message FindKVOneByKeyRequest {
    string app = 1;        // 应用标识
    string key = 2;   // key
}

message FindKVOneByKeyResponse {
    KVItemValue value = 1;           // 单个代码值
}

// 定义请求消息
message FindKVListByKeyListRequest {
    string app = 1;         // 应用名称
    repeated string keyList = 2; // 需要查询的 key 列表
}

// 定义响应消息
message FindKVListByKeyListResponse {
    map<string, KVItemValue> items = 1; // key -> KVItemValue 映射
}