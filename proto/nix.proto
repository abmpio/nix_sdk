syntax = "proto3";

option go_package="github.com/abmpio/nix_sdk/proto";

package nix;

service Nix {
	rpc HealthCheck(NixHealthCheckRequest) returns (NixHealthCheckResponse){};

	rpc FindOneKVByKey(FindKVOneByKeyRequest) returns (FindKVOneByKeyResponse){};
	rpc FindKVListByKeyList(FindKVListByKeyListRequest) returns (FindKVListByKeyListResponse){};
	rpc FindKVListByTag(FindKVListByTagRequest) returns (FindKVListByTagResponse){};
}


message NixHealthCheckRequest {
	string service = 1;
}

message NixHealthCheckResponse {
	enum ServiceStatus{
		UNKNOWN = 0;
		SERVING = 1;
		NOT_SERVING = 2;
		SERVICE_UNKNOWN = 3;
	}
	ServiceStatus status = 1;
}


// 定义 KVItemValue 结构
message KVItemValue {
    string type = 1; 
    bytes value = 2;       
}

// 请求消息类型
message FindKVOneByKeyRequest {
    string app = 1;        
    string key = 2;   
}

message FindKVOneByKeyResponse {
    KVItemValue value = 1;           
}

// 定义请求消息
message FindKVListByKeyListRequest {
    string app = 1;         
    repeated string keyList = 2; 
}

// 定义响应消息
message FindKVListByKeyListResponse {
    map<string, KVItemValue> items = 1; // key -> KVItemValue 映射
}

// 定义请求消息
message FindKVListByTagRequest {
    string app = 1;         
    string tag = 2; 
}

// 定义响应消息
message FindKVListByTagResponse {
    map<string, KVItemValue> items = 1; // key -> KVItemValue 映射
}